
from keyboards import kb_client,idb_client,ikb_client
from aiogram import types, md
from aiogram import Dispatcher
from create import dp, bot
from database import sqlite_database
from database.sqlite_database import sql_add_geopostition

""" @dp.message_handler(commands=['g']) #–¥–∏–∫–æ—Ä–∞—Ç–æ—Ä
async def g_func(message: types.Message):
    place = "–ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å, –ú–æ—Å–∫–≤–∞"
    location = GoogleV3(api_key="AIzaSyBAYdzyr-4Bwr9nwThuvhaPv9RGfmKlK58", domain="maps.google.ru").geocode(place)
    await message.answer(location.address)
    message.answer(location.latitude, location.longitude)
"""

#@dp.message_handler(commands=['start','help']) #–¥–∏–∫–æ—Ä–∞—Ç–æ—Ä
async def send_start(message: types.Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}</b>!\n",parse_mode=types.ParseMode.HTML)
    await message.answer("–ë–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n\nüî∏–ú–Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã –∫–æ–º–∞–Ω–¥—ã:\n - /dice\n- /load (–ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—ä–µ–∫—Ç–∞ - —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–π)\n- /getlocation \n\n üî∏<code>Update v.0.0.1</code> \n- –¥–æ–±–∞–≤–∏–ª –≤—ã—Ö–æ–¥ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è /load —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /–≤—ã—Ö–æ–¥ (–≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏–ª–∏ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ö–æ—á–µ—Ç –¥–∞–ª—å—à–µ —á—Ç–æ –ª–∏–±–æ –≤–≤–æ–¥–∏—Ç—å)\n - –Ω–µ–º–Ω–æ–≥–æ —Ä–∞—Å—à–∏—Ä–∏–ª —Ñ–∏–ª—å—Ç—Ä –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã—Ö —Å–ª–æ–≤\n - –±–æ—Ç –º–æ–∂–µ—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å–ª–æ–≤–æ '–±–æ—Ç'/'—Ç—É–ø–æ–π'\n\n üî∏<code>Update v.0.0.2</code>\n- –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /getlocation (–≥–µ–æ–ø–æ–∑–∏—Ü–∏—é –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å —á–µ—Ä–µ–∑ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ telegram, –ü–ö –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç)\n\n üî∏<code>Update v.0.0.3</code>\n- –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≥—Ä—É–ø–ø—ã\n- –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ /apanel\n- –∫–æ–º–∞–Ω–¥–∞ /load —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º\n- –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /url - –∫–Ω–æ–ø–∫–∏ —Å —Å—ã–ª–∫–∞–º–∏ (–≤ –¥–æ—Ä–∞–±–æ—Ç–∫–µ)",parse_mode=types.ParseMode.HTML)

@dp.message_handler(commands=['testp'])
async def cmd_test(message: types.Message):
    await message.answer(message.message_id)
    await message.answer(f'<b>{message.date}</b>',parse_mode=types.ParseMode.HTML)
    await message.answer(message.chat)
    await message.answer(message.from_user.full_name)
    
    
    
#@dp.message_handler(commands='dice')
async def cmd_dice(message: types.Message):
    await message.answer_dice(emoji="üé≤")

async def cmd_location_text(message: types.Message):
    global uname 
    await message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—é –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é')
    uname = message.from_user.full_name

async def cmd_location(message: types.Message):
    lat = message.location.latitude
    lon = message.location.longitude
    reply = "latitude:  {}\nlongitude: {}".format(lat, lon)
    await sqlite_database.sql_add_geopostition(uname,lat, lon)
    await message.answer(reply)

@dp.message_handler(commands=['url'])
async def unload_from_database(message: types.Message):
    await message.answer(text='—Å—Å—ã–ª–∫–∏:',reply_markup=ikb_client)



def register_handlers_client(dp: Dispatcher):
    dp.register_message_handler(send_start,commands=['start','help'])
    dp.register_message_handler(cmd_dice,commands=['dice'])
    dp.register_message_handler(cmd_location,content_types=['location'])
    dp.register_message_handler(cmd_location_text,commands = ['getlocation'])
    